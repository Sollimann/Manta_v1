<?xml version="1.0"?>
<launch>

<!-- NEEDS TO BE UNCOMMENTED FOR RUNNING ON MANTA -->
<!--  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/> -->

<!--  <node pkg="mcu_interface"      type="mcu_interface_node"         name="mcu_interface"      /> -->

<!--  <param name="mcu/device" type="string" value="/dev/ttySAC0"/>
  <node pkg="rostopic" type="rostopic" name="mcu_heartbeat" args="pub -r 1 /mcu_heartbeat std_msgs/String '{data: }'" respawn="true" /> -->

  <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] [${node}]: ${message}" />

  <rosparam command="load" file="$(find vortex)/config/robots/manta_enu.yaml"/>
  <rosparam command="load" file="$(find thruster_interface)/config/thruster_terrapin.yaml" />
  <rosparam command="load" file="$(find vortex)/config/environments/trondheim_freshwater.yaml"/>

<!-- FOR DEBUGGING ONLY -->
<param name="computer" value="pc-debug" />


  <node pkg="thruster_interface" type="thruster_interface_node.py" name="thruster_interface" />
  <node pkg="los_guidance"       type="los_guidance_backstepping.py" name="los_guidance"     />
  <node pkg="dp_controller"      type="node"                       name="controller" 	     />
  <node pkg="vortex_allocator"   type="node"                       name="allocator"          />

<!-- Launch object detection -->

<include file="$(find pole_detect)/launch/pole_detect.launch"/>
<include file="$(find gate_detect)/launch/gate_detect.launch"/> 

<!-- Launch battery simulator -->
<include file="$(find anomaly_detection)/launch/fake_battery_simulator.launch"/> 


<!-- State machine -->
   <node
    name="hsm_with_battery_concurrence"
    pkg="finite_state_machine"
    type="hsm_with_battery_concurrence.py"
    output="screen">
   </node> 

<!-- State machine visualization -->

   <node
    name="smach_viewer"
    pkg="smach_viewer"
    type="smach_viewer.py">
   </node>

</launch>
